#===============================================================================
# User Options
#===============================================================================

# Compiler can be set below, or via environment variable
CC = clang++
OPTIMIZE  = yes
DEBUG     = no
ARCH      = sm_60

#===============================================================================
# Program name & source code list
#===============================================================================

program = main

obj = main.o force_kernel.o

#===============================================================================
# Sets Flags
#===============================================================================

# Standard Flags
CFLAGS :=-std=c++14 --cuda-gpu-arch=sm_70 -cudaomp
          -D_MWAITXINTRIN_H_INCLUDED -D_FORCE_INLINES -D__STRICT_ANSI__ \
          -DGPU

# Linker Flags
LDFLAGS= -ldl -lrt -pthread -lomptarget -lomp

# Debug Flags
ifeq ($(DEBUG),yes)
  CFLAGS += -g -DDEBUG
  LDFLAGS  += -g
endif

# Optimization Flags
ifeq ($(OPTIMIZE),yes)
  CFLAGS += -O3
endif

#===============================================================================
# Targets to Build
#===============================================================================

$(program): $(obj)
	$(CC) $(obj) $(CFLAGS) -o $@ $(LDFLAGS)

main.o: main.cpp
	$(CC) $(CFLAGS) -c $< -o $@

force_kernel.o: force_kernel.cu
	$(CC) $(CFLAGS) -c $< -o $@

clean:
	rm -rf $(program) $(obj)
	rm -rf dataset/*.pdb
	rm -rf dataset/*.xyz
	rm -rf dataset/*.bak
	rm -rf dataset/*.dat

run: $(program)
	cd dataset && ../$(program) mcmd.inp && cd ..
