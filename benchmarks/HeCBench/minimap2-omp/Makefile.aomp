#===============================================================================
# User Options
#===============================================================================

# Compiler can be set below, or via environment variable
CC        = clang++
OPTIMIZE  = no
DEBUG     = yes
DEVICE    = gpu
ARCH      = gfx906

#===============================================================================
# Program name & source code list
#===============================================================================

program = main

source = device/device_kernel_wrapper.cpp \
src/host_data_io.cpp   \
src/host_kernel.cpp   \
src/main.cpp   \
src/memory_scheduler.cpp

obj = $(source:.cpp=.o)

#===============================================================================
# Sets Flags
#===============================================================================

# Standard Flags
CFLAGS := -std=c++14 -Wall -I./include

# Linker Flags
LDFLAGS = 

# Debug Flags
ifeq ($(DEBUG),yes)
  CFLAGS += -g
  LDFLAGS  += -g
endif


# Optimization Flags
ifeq ($(OPTIMIZE),yes)
  CFLAGS += -O3
endif


ifeq ($(DEVICE),gpu)
  CFLAGS += -target x86_64-pc-linux-gnu \
          -fopenmp -fopenmp-targets=amdgcn-amd-amdhsa \
          -Xopenmp-target=amdgcn-amd-amdhsa \
          -march=$(ARCH)
else
  CFLAGS +=-fopenmp
endif
#===============================================================================
# Targets to Build
#===============================================================================

$(program): $(obj) 
	$(CC) $(CFLAGS) $(obj) -o $@ $(LDFLAGS)

%.o: %.cpp include/datatypes.h include/device_kernel_wrapper.h \
	   include/host_data_io.h include/host_kernel.h \
	   include/kernel_common.h include/memory_scheduler.h
	$(CC) $(CFLAGS) -c $< -o $@

clean:
	rm -rf $(program) $(obj)

run: $(program)
	./$(program) ../minimap2-sycl/in-1k.txt kernel-out.txt

