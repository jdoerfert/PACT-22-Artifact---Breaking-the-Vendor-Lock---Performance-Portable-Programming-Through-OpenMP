#===============================================================================
# User Options
#===============================================================================

# Compiler can be set below, or via environment variable
CC        = clang++
OPTIMIZE  = yes
DEBUG     = no


#===============================================================================
# Program name & source code list
#===============================================================================

program = triad

source = main.cpp  Option.cpp  OptionParser.cpp  Timer.cpp
hip_source = triad.cu 

obj = $(source:.cpp=.o) $(hip_source:.cu=.o)

#===============================================================================
# Sets Flags
#===============================================================================

# Standard Flags
CFLAGS := -std=c++14 -Wall -x hip --offload-arch=gfx906 -O3 -mllvm -amdgpu-early-inline-all=true -mllvm -amdgpu-function-calls=false -fhip-new-launch-api

# Linker Flags
LDFLAGS = -lm -L"/opt/rocm-5.0.2/hip/lib" -lgcc_s -lgcc -lpthread -lm -lrt  -Wl,--enable-new-dtags -Wl,-rpath=/opt/rocm-5.0.2/hip/lib:/opt/rocm-5.0.2/lib -lamdhip64

# Debug Flags
ifeq ($(DEBUG),yes)
  CFLAGS += -g
  LDFLAGS  += -g
endif


# Optimization Flags
ifeq ($(OPTIMIZE),yes)
  CFLAGS += -O3
endif

#===============================================================================
# Targets to Build
#===============================================================================

$(program): $(obj) Makefile
	$(CC) $(obj) -o $@ $(LDFLAGS)

main.o: main.cpp OptionParser.h Utility.h 
	$(CC) $(CFLAGS) -c $< -o $@

Option.o: Option.cpp Option.h 
	$(CC) $(CFLAGS) -c $< -o $@

OptionParser.o: OptionParser.cpp OptionParser.h  Utility.h
	$(CC) $(CFLAGS) -c $< -o $@

triad.o: triad.cu Timer.h OptionParser.h 
	$(CC) $(CFLAGS) -c $< -o $@

Timer.o: Timer.cpp Timer.h config.h  
	$(CC) $(CFLAGS) -c $< -o $@


clean:
	rm -rf $(program) $(obj)

run: $(program)
	./$(program) --passes 100 

